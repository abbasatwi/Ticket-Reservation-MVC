<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
<style>
    .chart-container {
        padding: 20px;
        background-color: #f8f9fa;
        border-radius: 8px;
        box-shadow: 0 6px 10px rgba(0,0,0,0.1);
        margin-top: 20px;
    }

    .chart-header {
        text-align: center;
        color: #007bff;
        margin-bottom: 20px;
    }

    .no-data {
        text-align: center;
        color: red;
        font-size: 18px;
    }

    .canvas-container {
        position: relative;
        width: 100%;
        padding: 0;
        margin: auto;
    }

    canvas {
        max-width: 100%;
    }
</style>

<div class="container mt-4">
    @if (Model != null)
    {
        <div class="chart-container d-flex justify-content-around align-items-center">
            <div class="canvas-container">
                <h2 class="chart-header">Bar Chart - Data Overview</h2>
                <canvas id="barChart"></canvas>
            </div>
            <div class="canvas-container">
                <h2 class="chart-header">Pie Chart - Team Distribution</h2>
                <canvas id="pieChart"></canvas>
            </div>
        </div>
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.0.0/dist/chartjs-plugin-datalabels.min.js"></script>
        <script>
            var barCtx = document.getElementById('barChart').getContext('2d');
            var pieCtx = document.getElementById('pieChart').getContext('2d');

            // Create gradient for bar chart
            var gradient = barCtx.createLinearGradient(0, 0, 0, 400);
            gradient.addColorStop(0, 'rgba(58, 123, 213, 1)');
            gradient.addColorStop(1, 'rgba(0, 210, 255, 1)');

            var barData = {
                labels: ['Stadiums', 'Categories', 'Tickets', 'Matches'],
                datasets: [{
                    label: 'Counts',
                    data: [@Model.StadiumCount, @Model.CategoryCount, @Model.TicketCount, @Model.MatchCount],
                    backgroundColor: gradient,
                    hoverBackgroundColor: 'rgba(255, 226, 89, 0.75)',
                    borderColor: 'rgba(0, 0, 0, 0.1)',
                    borderWidth: 1,
                    hoverOffset: 4
                }]
            };

            var pieData = {
                labels: ['Teams', 'Captains', 'Managers'],
                datasets: [{
                    label: 'Counts',
                    data: [@Model.TeamCount, @Model.CaptainCount, @Model.ManagerCount],
                    backgroundColor: [
                        'rgba(153, 102, 255, 0.6)',
                        'rgba(255, 159, 64, 0.6)',
                        'rgba(199, 199, 199, 0.6)'
                    ],
                    borderColor: [
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)',
                        'rgba(159, 159, 159, 1)'
                    ],
                    borderWidth: 1,
                    hoverOffset: 4
                }]
            };

            var barChart = new Chart(barCtx, {
                type: 'bar',
                data: barData,
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    },
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            enabled: true,
                            mode: 'index',
                            intersect: false
                        },
                        datalabels: {
                            color: '#000',
                            anchor: 'end',
                            align: 'top',
                            formatter: Math.round
                        }
                    }
                }
            });

            var pieChart = new Chart(pieCtx, {
                type: 'pie',
                data: pieData,
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'top',
                        },
                        tooltip: {
                            enabled: true
                        },
                        title: {
                            display: true,
                            text: 'Distribution Overview',
                            color: '#007bff'
                        }
                    }
                }
            });
        </script>
    }
    else
    {
        <p class="no-data">No data available</p>
    }
</div>